Implementing [https://www.amazon.com/REDGO-Video-Capture-Converter-Adapter/dp/B01E5ITE2W this USB video adapter] to capture video from the small analog cameras in the hutch took a bit of doing.

First, the adapter '''must''' be plugged directly into the computer.&nbsp; Using the USB hub beneath the monitor makes for an unreliable interface to the camera.

Second, the file <tt>/etc/udev/rules.d/99-usb-camera-capture.rules</tt> is needed to set permissions on <tt>/dev/video0</tt> correctly when the adapter is plugged in.

<code>ACTION!="add|change", GOTO="webcam_capture_end"<br/>SUBSYSTEM=="usb", ATTRS{idVendor}=="534d", ATTRS{idProduct}=="0021", MODE="0666"<br/>KERNEL=="video*", ATTRS{idVendor}=="534d", ATTRS{idProduct}=="0021", GROUP="video", MODE="0666"<br/>KERNEL=="video*", ATTRS{idVendor}=="534d", ATTRS{idProduct}=="0021", ATTRS{avoid_reset_quirk}=1<br/>KERNEL=="video*", ATTRS{idVendor}=="534d", ATTRS{idProduct}=="0021", ATTRS{quirks}=0x100<br/>LABEL="webcam_capture_end"</code>

This recognizes the vendor and product IDs of the specific adapter that I bought.&nbsp; When inserted, it sets the device to RW for all users and sets a couple of possibly relevant attributes.&nbsp; (This udev rules file was adapted from the rules file that comes with the easycap dc60 package â€“ info and links [http://easycap.blogspot.com/p/easycap-dc60.html here]).

Next a small script was written as a wrapper around [https://github.com/fsphil/fswebcam fswebcam] to grab frames from the camera and draw a cross hair on the image.&nbsp; (This requires installing the <tt>fswebcam</tt> and <tt>imagemagick</tt> debian packages.)&nbsp; The script is basically a wrapper around a call to fswebcam like so:

<code>fswebcam -d /dev/video0 -r 640x480 -S 30 -F 5 foo.jpg</code>

along with some image processing using python's wand package.

<u>Required debian packages</u>: <tt>fswebcam</tt>, <tt>python-wand</tt>

This whole setup is filled with quirk.&nbsp; There is a delay accessing the video capture.&nbsp; The <tt>-S</tt> switch builds in a 1 second delay, giving the capture device enough time to begin displaying the image.&nbsp; The <tt>-F</tt> switch tells the script how many frames to accumulate for good signal.&nbsp; 5 is probably overkill.

In any case, it is now possible to grab screen shots of the currently displayed analog video while collecting data.

All of this is implemented in <tt>47-snapshot.py</tt> for use in BlueSky. The heart of the implementation is a system call to <tt>fswebcam</tt>.

'''<span style="color:#FFFFFF"><span style="background-color: rgb(255, 0, 0)">To do:</span></span>''' For some reason, capturing from the B&W Sony camera does not work.

----

<code>bravel@xf06bm-ws1 [~] > ./anacam.py -h<br/>usage: anacam.py [-h] [-d DIRECTORY] [-v DEVICE] [-s SKIP] [-f FRAMES]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [-b BRIGHTNESS] [-x X] [-y Y] [-l LINECOLOR] [-n] [-r] [-q]</code>

<code>Capture a screenshot from the currently displayed analog camera</code>

<code>optional arguments:<br/>&nbsp; -h, --help&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; show this help message and exit<br/>&nbsp; -d DIRECTORY, --directory DIRECTORY<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; output image directory (/home/bravel)<br/>&nbsp; -v DEVICE, --device DEVICE<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; input device (/dev/video0)<br/>&nbsp; -s SKIP, --skip SKIP&nbsp; number of frames to skip (30)<br/>&nbsp; -f FRAMES, --frames FRAMES<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; number of frames to accumulate (5)<br/>&nbsp; -b BRIGHTNESS, --brightness BRIGHTNESS<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; percent brightness (20)<br/>&nbsp; -x X&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x-position of cross hairs (320)<br/>&nbsp; -y Y&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; y-position of cross hairs (240)<br/>&nbsp; -l LINECOLOR, --linecolor LINECOLOR<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cross hair line color (white)<br/>&nbsp; -n, --nocrosshair&nbsp;&nbsp;&nbsp;&nbsp; flag suppressing cross hair (default is to draw cross<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; hair at x,y)<br/>&nbsp; -r, --reset&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; flag for attempting to reset device (default is not to<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; try)<br/>&nbsp; -q, --quiet&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; flag suppressing screen comments (default is false)</code>